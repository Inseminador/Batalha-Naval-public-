import java.util.Random;

public class ColocarNaviosMaquina extends ColocarNaviosJogador {

    Random random = new Random();
    int PrimeiraColocadaMaquina1 = -1;
    [REDACTED]
    int TerceiraColocadaMaquina1 = -1;
    [REDACTED]
    [REDACTED]
    int TerceiraColocadaMaquina2 = -1;
    [REDACTED]
    int SegundaColocadaMaquina3 = -1;
    [REDACTED]

    int NavioCicloCheckMaquina = 1;

    int PrimeiraColocadaMaquina;
    int Chance2Possibilidades;
    [REDACTED]
    int Chance4Possibilidades;

    int SegundaColocadaMaquina = 80085;
    [REDACTED]
        
    public void colocarNaviosMaquina() {

        while (NavioCicloCheckMaquina <= 3) {
            PrimeiraColocadaMaquina = random.nextInt(49);
            [REDACTED]
            Chance3Possibilidades = random.nextInt(3) + 1;
            [REDACTED]

            // Segunda Colocada do Primeiro Navio
            if (PrimeiraColocadaMaquina >= 7 && PrimeiraColocadaMaquina <= 41) {
                if (PrimeiraColocadaMaquina % 7 == 0) {
                    if (Chance3Possibilidades == 1) {
                        [REDACTED]
                } else if ((PrimeiraColocadaMaquina + 1) % 7 == 0) {
                    if (Chance3Possibilidades == 1) {
                    [REDACTED]
                        SegundaColocadaMaquina = (PrimeiraColocadaMaquina + 7);
                    }[REDACTED]
                } else {
                    if (Chance4Possibilidades == 1) {
                      [REDACTED]
                        SegundaColocadaMaquina = (PrimeiraColocadaMaquina - 1);
                    } [REDACTED]
                }[REDACTED]
            } else if (PrimeiraColocadaMaquina == 0) {
                if (Chance2Possibilidades == 1) {
                    SegundaColocadaMaquina = (PrimeiraColocadaMaquina + 1);
                } [REDACTED]
            }[REDACTED]
            // Terceira Colocada do Primeiro Navio
            if (SegundaColocadaMaquina == (PrimeiraColocadaMaquina - 7)) {
                [REDACTED]
            }[REDACTED]
                    TerceiraColocadaMaquina = (SegundaColocadaMaquina + 7);
                }[REDACTED]
                    if (Chance2Possibilidades == 1) {
                        TerceiraColocadaMaquina = (SegundaColocadaMaquina + 7);
                    }[REDACTED]
                }
            }[REDACTED]
                }
            } else if (SegundaColocadaMaquina == (PrimeiraColocadaMaquina + 1)) {
               [REDACTED]
            if (NavioCicloCheckMaquina == 1) {
                PrimeiraColocadaMaquina1 = PrimeiraColocadaMaquina;
                [REDACTED]
                TerceiraColocadaMaquina1 = TerceiraColocadaMaquina;
                ButtonsMaquina[PrimeiraColocadaMaquina1].setBackground(CorNavioProa); ////
                [REDACTED]
                ButtonsMaquina[TerceiraColocadaMaquina1].setBackground(CorNavioPopa); ////

                NavioCicloCheckMaquina++;

            } else if (NavioCicloCheckMaquina == 2) {
                [REDACTED]
                SegundaColocadaMaquina2 = SegundaColocadaMaquina;
                [REDACTED]
                if(PrimeiraColocadaMaquina1 != PrimeiraColocadaMaquina2 &&
                 [REDACTED]
                 SegundaColocadaMaquina1 != SegundaColocadaMaquina2 &&
                 SegundaColocadaMaquina1 != TerceiraColocadaMaquina2 &&
                 [REDACTED]
                 TerceiraColocadaMaquina1 != SegundaColocadaMaquina2 &&
                 TerceiraColocadaMaquina1 != TerceiraColocadaMaquina2) {
                    ButtonsMaquina[PrimeiraColocadaMaquina2].setBackground(CorNavioProa); ////
                    [REDACTED] ////
                    NavioCicloCheckMaquina ++;
                } else {
                    for (int j = 0; j <= 48; j++) {
                        ButtonsMaquina[j].setBackground(CorDesconhecido);
                    }
                    [REDACTED]
                }

            } else if (NavioCicloCheckMaquina == 3) {
                PrimeiraColocadaMaquina3 = PrimeiraColocadaMaquina;
                [REDACTED]
                 PrimeiraColocadaMaquina3 != TerceiraColocadaMaquina1 &&
                 SegundaColocadaMaquina3 != PrimeiraColocadaMaquina1 &&
                [REDACTED]
                 TerceiraColocadaMaquina3 != PrimeiraColocadaMaquina2 &&
                 [REDACTED]
                    ButtonsMaquina[PrimeiraColocadaMaquina3].setBackground(CorNavioProa); ////
                    [REDACTED]
                    NavioCicloCheckMaquina++;
                } else{
                    for (int j = 0; j <= 48; j++) {
                        ButtonsMaquina[j].setBackground(CorDesconhecido);
                    }
                    NavioCicloCheckMaquina = 1;
                } // Fim da sequência de check do terceiro navio
            } // Último check da sequência de todos os navios
        } // Ciclo de repetição para colocação dos navios
    } // Bloco do método
} // Bloco da Classe